{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport React from 'react';\nimport clsx from 'clsx';\nimport { withRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\n/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nfunction NextComposed(props) {\n  var as = props.as,\n      href = props.href,\n      prefetch = props.prefetch,\n      other = _objectWithoutProperties(props, [\"as\", \"href\", \"prefetch\"]);\n\n  return React.createElement(NextLink, {\n    href: href,\n    prefetch: prefetch,\n    as: as\n  }, React.createElement(\"a\", other));\n}\n/**\n *\n * @type {{as: *, prefetch: (shim|Requireable<boolean>), href: *}}\n */\n\n\n/**\n * A styled version of the Next.js Link component:\n * https://nextjs.org/docs/#with-link\n * @param props\n * @returns {*}\n * @constructor\n */\nfunction Link(props) {\n  var activeClassName = props.activeClassName,\n      router = props.router,\n      classNameProps = props.className,\n      naked = props.naked,\n      other = _objectWithoutProperties(props, [\"activeClassName\", \"router\", \"className\", \"naked\"]);\n\n  var className = clsx(classNameProps, _defineProperty({}, activeClassName, router.pathname === props.href && activeClassName));\n\n  if (naked) {\n    return React.createElement(NextComposed, _extends({\n      className: className\n    }, other));\n  }\n\n  return React.createElement(MuiLink, _extends({\n    component: NextComposed,\n    className: className\n  }, other));\n}\n/**\n *\n * @type {{as: *, onClick: *, router: Validator<NonNullable<T>> | shim, prefetch: (shim|Requireable<boolean>), className: *, href: *, naked: (shim|Requireable<boolean>), activeClassName: *}}\n */\n\n\nLink.defaultProps = {\n  activeClassName: 'active'\n};\nexport default withRouter(Link);","map":null,"metadata":{},"sourceType":"module"}