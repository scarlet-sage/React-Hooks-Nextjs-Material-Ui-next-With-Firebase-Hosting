{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mbp-2016/Downloads/template/src/app/contexts/counter.js\";\nimport React, { createContext, useState, useCallback } from 'react';\nvar CounterContext = createContext();\n\nvar CounterProvider = function CounterProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var memoizedCallback = useCallback(function () {\n    console.log(count);\n  }, [count]);\n\n  var delay = function delay(ms) {\n    return new _Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n  };\n\n  var reset = function reset() {\n    return setCount(0);\n  };\n\n  var increment = function increment() {\n    return setCount(function (prevCount) {\n      return prevCount + 1;\n    });\n  };\n\n  var delayIncrement =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return delay(1000);\n\n            case 2:\n              setCount(function (prevCount) {\n                return prevCount + 1;\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function delayIncrement() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var decrement = function decrement() {\n    return setCount(function (prevCount) {\n      return prevCount - 1;\n    });\n  };\n\n  var delayDecrement =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return delay(1000);\n\n            case 2:\n              setCount(function (prevCount) {\n                return prevCount - 1;\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function delayDecrement() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(CounterContext.Provider, {\n    value: {\n      count: count,\n      reset: reset,\n      increment: increment,\n      delayIncrement: delayIncrement,\n      decrement: decrement,\n      delayDecrement: delayDecrement,\n      memoizedCallback: memoizedCallback\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, children);\n};\n\nexport { CounterContext, CounterProvider };","map":{"version":3,"sources":["/Users/mbp-2016/Downloads/template/src/app/contexts/counter.js"],"names":["React","createContext","useState","useCallback","CounterContext","CounterProvider","children","count","setCount","memoizedCallback","console","log","delay","ms","resolve","setTimeout","reset","increment","prevCount","delayIncrement","decrement","delayDecrement"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,WAAxC,QAA0D,OAA1D;AAEA,IAAMC,cAAc,GAAGH,aAAa,EAApC;;AAEA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,kBACVJ,QAAQ,CAAC,CAAD,CADE;AAAA;AAAA,MAC7BK,KAD6B;AAAA,MACtBC,QADsB;;AAGpC,MAAMC,gBAAgB,GAAGN,WAAW,CAAC,YAAM;AACzCO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,GAFmC,EAEjC,CAACA,KAAD,CAFiC,CAApC;;AAIA,MAAMK,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE;AAAA,WAAI,aAAY,UAAAC,OAAO;AAAA,aAAIC,UAAU,CAACD,OAAD,EAAUD,EAAV,CAAd;AAAA,KAAnB,CAAJ;AAAA,GAAhB;;AAEA,MAAMG,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAMR,QAAQ,CAAC,CAAD,CAAd;AAAA,GAAd;;AAEA,MAAMS,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMT,QAAQ,CAAC,UAAAU,SAAS;AAAA,aAAIA,SAAS,GAAG,CAAhB;AAAA,KAAV,CAAd;AAAA,GAAlB;;AAEA,MAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACfP,KAAK,CAAC,IAAD,CADU;;AAAA;AAErBJ,cAAAA,QAAQ,CAAC,UAAAU,SAAS;AAAA,uBAAIA,SAAS,GAAG,CAAhB;AAAA,eAAV,CAAR;;AAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdC,cAAc;AAAA;AAAA;AAAA,KAApB;;AAKA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMZ,QAAQ,CAAC,UAAAU,SAAS;AAAA,aAAIA,SAAS,GAAG,CAAhB;AAAA,KAAV,CAAd;AAAA,GAAlB;;AAEA,MAAMG,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACfT,KAAK,CAAC,IAAD,CADU;;AAAA;AAErBJ,cAAAA,QAAQ,CAAC,UAAAU,SAAS;AAAA,uBAAIA,SAAS,GAAG,CAAhB;AAAA,eAAV,CAAR;;AAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdG,cAAc;AAAA;AAAA;AAAA,KAApB;;AAKA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLd,MAAAA,KAAK,EAALA,KADK;AAELS,MAAAA,KAAK,EAALA,KAFK;AAGLC,MAAAA,SAAS,EAATA,SAHK;AAILE,MAAAA,cAAc,EAAdA,cAJK;AAKLC,MAAAA,SAAS,EAATA,SALK;AAMLC,MAAAA,cAAc,EAAdA,cANK;AAOLZ,MAAAA,gBAAgB,EAAhBA;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGH,QAXH,CADF;AAeD,CAxCH;;AA2CA,SAAQF,cAAR,EAAwBC,eAAxB","sourcesContent":["import React, {createContext, useState, useCallback} from 'react';\n\nconst CounterContext = createContext();\n\nconst CounterProvider = ({children}) => {\n    const [count, setCount] = useState(0);\n\n    const memoizedCallback = useCallback(() => {\n      console.log(count)\n    }, [count],);\n\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n    const reset = () => setCount(0);\n\n    const increment = () => setCount(prevCount => prevCount + 1);\n\n    const delayIncrement = async () => {\n      await delay(1000);\n      setCount(prevCount => prevCount + 1);\n    };\n\n    const decrement = () => setCount(prevCount => prevCount - 1);\n\n    const delayDecrement = async () => {\n      await delay(1000);\n      setCount(prevCount => prevCount - 1);\n    };\n\n    return (\n      <CounterContext.Provider\n        value={{\n          count,\n          reset,\n          increment,\n          delayIncrement,\n          decrement,\n          delayDecrement,\n          memoizedCallback,\n        }}\n      >\n        {children}\n      </CounterContext.Provider>\n    )\n  }\n;\n\nexport {CounterContext, CounterProvider}\n"]},"metadata":{},"sourceType":"module"}