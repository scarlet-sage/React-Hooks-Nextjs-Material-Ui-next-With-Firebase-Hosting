"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.styles = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _clsx2 = _interopRequireDefault(require("clsx"));

var _withStyles = _interopRequireDefault(require("../styles/withStyles"));

require("../Button");

// So we don't have any override priority issue.
var styles = {
  /* Styles applied to the root element. */
  root: {
    display: 'flex',
    alignItems: 'center',
    padding: 8,
    justifyContent: 'flex-end'
  },

  /* Styles applied to the root element if `disableSpacing={false}`. */
  spacing: {
    '& > * + *': {
      marginLeft: 8
    }
  }
};
exports.styles = styles;

var ExpansionPanelActions = _react.default.forwardRef(function ExpansionPanelActions(props, ref) {
  var classes = props.classes,
      className = props.className,
      disableSpacing = props.disableSpacing,
      other = (0, _objectWithoutProperties2.default)(props, ["classes", "className", "disableSpacing"]);
  return _react.default.createElement("div", (0, _extends2.default)({
    className: (0, _clsx2.default)(classes.root, (0, _defineProperty2.default)({}, classes.spacing, !disableSpacing), className),
    ref: ref
  }, other));
});

process.env.NODE_ENV !== "production" ? ExpansionPanelActions.propTypes = {
  /**
   * The content of the component.
   */
  children: _propTypes.default.node.isRequired,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: _propTypes.default.object.isRequired,

  /**
   * @ignore
   */
  className: _propTypes.default.string,

  /**
   * If `true`, the actions do not have additional margin.
   */
  disableSpacing: _propTypes.default.bool
} : void 0;
ExpansionPanelActions.defaultProps = {
  disableSpacing: false
};

var _default = (0, _withStyles.default)(styles, {
  name: 'MuiExpansionPanelActions'
})(ExpansionPanelActions);

exports.default = _default;